{"version":3,"sources":["../src/index copy.js"],"names":["port","process","env","PORT","console","log","MONGODB_URI","MongoClient","connect","useNewUrlParser","catch","err","error","stack","exit","then","client","DataDAO","injectDB","StockDataDAO","app","listen"],"mappings":";;AAAA;;AACA;;AAEA;;;;AACA;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAO,CAACC,GAAR,CAAYI,WAAnC;;AAEAC,qBAAYC,OAAZ,CAAoBP,OAAO,CAACC,GAAR,CAAYI,WAAhC,EAA6C;AAC5C;AACA;AACAG,EAAAA,eAAe,EAAE,IAH2B,CAI5C;;AAJ4C,CAA7C,EAMEC,KANF,CAMQC,GAAG,IAAI;AACbP,EAAAA,OAAO,CAACQ,KAAR,CAAcD,GAAG,CAACE,KAAlB,EAAyB,kBAAzB;AACAZ,EAAAA,OAAO,CAACa,IAAR,CAAa,CAAb;AACA,CATF,EAUEC,IAVF,CAUO,MAAMC,MAAN,IAAgB;AACrB,QAAMC,iBAAQC,QAAR,CAAiBF,MAAjB,CAAN;AACA,QAAMG,sBAAaD,QAAb,CAAsBF,MAAtB,CAAN,CAFqB,CAGrB;AACA;AAEA;;AAEAI,kBAAIC,MAAJ,CAAWrB,IAAX,EAAiB,MAAM;AACtBI,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBL,IAAK,EAAtC;AACA,GAFD,EARqB,CAWrB;;AACA,CAtBF,E,CAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import app from './server';\nimport {MongoClient} from 'mongodb';\n\nimport {DataDAO, StockDataDAO} from './dao/dataDAO';\n// import DataCtrl from '../src/api/data.controller';\n\nconst port = process.env.PORT || 8000;\n\nconsole.log('running', process.env.MONGODB_URI);\n\nMongoClient.connect(process.env.MONGODB_URI, {\n\t// wtimeout: 25000,\n\t// poolSize: 50,\n\tuseNewUrlParser: true,\n\t// useUnifiedTopology: true,\n})\n\t.catch(err => {\n\t\tconsole.error(err.stack, '-----error stack');\n\t\tprocess.exit(1);\n\t})\n\t.then(async client => {\n\t\tawait DataDAO.injectDB(client);\n\t\tawait StockDataDAO.injectDB(client);\n\t\t// await UsersDAO.injectDB(client);\n\t\t// await CommentsDAO.injectDB(client);\n\n\t\t// DataCtrl.apiGetData();\n\n\t\tapp.listen(port, () => {\n\t\t\tconsole.log(`listening on port ${port}`);\n\t\t});\n\t\t// console.log(`listening on port ${port}`);\n\t});\n\n// const uri =\n// \t'mongodb+srv://<username>:<password>@mflix.awuah.mongodb.net/myFirstDatabase?retryWrites=true&w=majority';\n// const client = new MongoClient(process.env.MONGODB_URI, {\n// \tuseNewUrlParser: true,\n// \tuseUnifiedTopology: true,\n// });\n// client.connect(err => {\n// \tconst collection = client.db('test').collection('devices');\n// \t// perform actions on the collection object\n// \tclient.close();\n// });\n"],"file":"index copy.js"}