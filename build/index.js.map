{"version":3,"sources":["../src/index.js"],"names":["require","config","app","get","req","res","status","json","message","port","process","env","PORT","listen","console","log"],"mappings":";;AAEA;;;;;;AAFAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAIA,IAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,KAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAS,8BAAV,EAArB;AACA,CAFD;;AAIA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEAV,IAAIW,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACtBK,SAAQC,GAAR,6BAAsCN,IAAtC;AACA,CAFD;;AAIA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["require('dotenv').config();\n\nimport express from 'express';\n\nconst app = express();\n\napp.get('/', (req, res) => {\n\tres.status(200).json({message: 'Welcome to Node.js & Express'});\n});\n\nconst port = process.env.PORT || 8000;\n\napp.listen(port, () => {\n\tconsole.log(`App is running on port ${port}`);\n});\n\n// import app from './server';\n// import {MongoClient} from 'mongodb';\n\n// require('dotenv').config();\n\n// import {DataDAO, StockDataDAO} from './dao/dataDAO';\n// // // import DataCtrl from '../src/api/data.controller';\n\n// const port = process.env.PORT || 8000;\n\n// // console.log('running', process.env.MONGODB_URI);\n\n// MongoClient.connect(process.env.MONGODB_URI, {\n// \t// wtimeout: 25000,\n// \t// poolSize: 50,\n// \tuseNewUrlParser: true,\n// \t// useUnifiedTopology: true,\n// })\n// \t.catch(err => {\n// \t\tconsole.error(err.stack, '-----error stack');\n// \t\tprocess.exit(1);\n// \t})\n// \t.then(async client => {\n// \t\t// console.log(client);\n// \t\tawait DataDAO.injectDB(client);\n// \t\t// await StockDataDAO.injectDB(client);\n// \t\t// await UsersDAO.injectDB(client);\n// \t\t// await CommentsDAO.injectDB(client);\n\n// \t\t// \t\t// DataCtrl.apiGetData();\n\n// \t\tapp.listen(port, () => {\n// \t\t\tconsole.log(`listening on port ${port}`);\n// \t\t});\n// \t\t// console.log(`listening on port ${port}`);\n// \t});\n"]}